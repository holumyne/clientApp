{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../checkout.service\";\nimport * as i2 from \"src/app/basket/basket.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/cdk/stepper\";\nfunction CheckoutDeliveryComponent_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"input\", 10);\n    i0.ɵɵlistener(\"click\", function CheckoutDeliveryComponent_div_0_div_2_Template_input_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const method_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.setShippingPrice(method_r2));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 11)(3, \"strong\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"br\");\n    i0.ɵɵelementStart(7, \"span\", 12);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const method_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", method_r2.id);\n    i0.ɵɵpropertyInterpolate(\"value\", method_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", method_r2.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", method_r2.shortName, \" - \", i0.ɵɵpipeBind1(5, 6, method_r2.price), \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(method_r2.description);\n  }\n}\nfunction CheckoutDeliveryComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 7);\n    i0.ɵɵtemplate(2, CheckoutDeliveryComponent_div_0_div_2_Template, 9, 8, \"div\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.checkoutForm);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.deliveryMethods);\n  }\n}\nexport class CheckoutDeliveryComponent {\n  constructor(checkoutService, basketService) {\n    this.checkoutService = checkoutService;\n    this.basketService = basketService;\n    this.deliveryMethods = [];\n  }\n  ngOnInit() {\n    this.checkoutService.getDeliveryMethods().subscribe({\n      next: dm => this.deliveryMethods = dm\n    });\n  }\n  setShippingPrice(deliveryMethod) {\n    this.basketService.setShippingPrice(deliveryMethod);\n  }\n}\nCheckoutDeliveryComponent.ɵfac = function CheckoutDeliveryComponent_Factory(t) {\n  return new (t || CheckoutDeliveryComponent)(i0.ɵɵdirectiveInject(i1.CheckoutService), i0.ɵɵdirectiveInject(i2.BasketService));\n};\nCheckoutDeliveryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CheckoutDeliveryComponent,\n  selectors: [[\"app-checkout-delivery\"]],\n  inputs: {\n    checkoutForm: \"checkoutForm\"\n  },\n  decls: 8,\n  vars: 1,\n  consts: [[\"class\", \"mt-4\", 3, \"formGroup\", 4, \"ngIf\"], [1, \"d-flex\", \"justify-content-between\", \"flex-row\", \"mb-5\"], [\"cdkStepperPrevious\", \"\", 1, \"btn\", \"btn-outline-primary\"], [1, \"fa\", \"fa-angle-left\"], [\"cdkStepperNext\", \"\", 1, \"btn\", \"btn-primary\"], [1, \"fa\", \"fa-angle-right\"], [1, \"mt-4\", 3, \"formGroup\"], [\"formGroupName\", \"deliveryForm\", 1, \"row\"], [\"class\", \"col-6 form-group\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-6\", \"form-group\"], [\"type\", \"radio\", \"formControlName\", \"deliveryMethod\", 1, \"form-check-input\", 3, \"id\", \"value\", \"click\"], [1, \"form-check-label\", \"ms-2\", \"mb-3\", 3, \"for\"], [1, \"label-description\"]],\n  template: function CheckoutDeliveryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CheckoutDeliveryComponent_div_0_Template, 3, 2, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"button\", 2);\n      i0.ɵɵelement(3, \"i\", 3);\n      i0.ɵɵtext(4, \" Back to address \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 4);\n      i0.ɵɵtext(6, \" Go to Review \");\n      i0.ɵɵelement(7, \"i\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.checkoutForm);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.DefaultValueAccessor, i4.RadioControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i4.FormGroupName, i5.CdkStepperNext, i5.CdkStepperPrevious, i3.CurrencyPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;IAEQA,8BAAqE;IAM7DA;MAAA;MAAA;MAAA;MAAA,OAASA,iDAAwB;IAAA,EAAC;IALtCA,iBAMC;IACDA,iCAA8D;IAClDA,YAAkD;;IAAAA,iBAAS;IACnEA,qBAAM;IACNA,gCAAgC;IAAAA,YAAsB;IAAAA,iBAAO;;;;IAT7DA,eAAgB;IAAhBA,4CAAgB;IAChBA,+CAAmB;IAKhBA,eAAmB;IAAnBA,6CAAmB;IACdA,eAAkD;IAAlDA,gGAAkD;IAE1BA,eAAsB;IAAtBA,2CAAsB;;;;;IAbtEA,8BAAkE;IAE1DA,gFAaM;IACVA,iBAAM;;;;IAhB6BA,+CAA0B;IAERA,eAAkB;IAAlBA,gDAAkB;;;ACS3E,OAAM,MAAOC,yBAAyB;EAIpCC,YAAoBC,eAAgC,EAAUC,aAA4B;IAAtE,oBAAe,GAAfD,eAAe;IAA2B,kBAAa,GAAbC,aAAa;IAF3E,oBAAe,GAAqB,EAAE;EAEuD;EAE7FC,QAAQ;IACN,IAAI,CAACF,eAAe,CAACG,kBAAkB,EAAE,CAACC,SAAS,CAAC;MAClDC,IAAI,EAAEC,EAAE,IAAI,IAAI,CAACC,eAAe,GAAGD;KACpC,CAAC;EACJ;EAEAE,gBAAgB,CAACC,cAA8B;IAC7C,IAAI,CAACR,aAAa,CAACO,gBAAgB,CAACC,cAAc,CAAC;EACrD;;AAdWX,yBAAyB;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB;QAAzBA,yBAAyB;EAAAY;EAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDXtCnB,0EAiBM;MAENA,8BAA0D;MAElDA,uBAAgC;MAACA,iCACrC;MAAAA,iBAAS;MACTA,iCAAgD;MAC5CA,8BAAa;MAAAA,uBAAiC;MAClDA,iBAAS;;;MAzBMA,uCAAkB","names":["i0","CheckoutDeliveryComponent","constructor","checkoutService","basketService","ngOnInit","getDeliveryMethods","subscribe","next","dm","deliveryMethods","setShippingPrice","deliveryMethod","selectors","inputs","checkoutForm","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\olumi\\Desktop\\ECommerce\\client\\src\\app\\checkout\\checkout-delivery\\checkout-delivery.component.html","C:\\Users\\olumi\\Desktop\\ECommerce\\client\\src\\app\\checkout\\checkout-delivery\\checkout-delivery.component.ts"],"sourcesContent":["<div class=\"mt-4\" *ngIf=\"checkoutForm\" [formGroup]=\"checkoutForm\">\n    <div class=\"row\" formGroupName=\"deliveryForm\">\n        <div class=\"col-6 form-group\" *ngFor=\"let method of deliveryMethods\">\n            <input type=\"radio\"\n                id={{method.id}}\n                value={{method.id}}\n                formControlName=\"deliveryMethod\"\n                class=\"form-check-input\"\n                (click)=\"setShippingPrice(method)\"\n            >\n            <label for=\"{{method.id}}\" class=\"form-check-label ms-2 mb-3\">\n                <strong>{{method.shortName}} - {{method.price | currency}}</strong>\n                <br />\n                <span class=\"label-description\">{{method.description}}</span>\n            </label>\n        </div>\n    </div>\n</div>\n\n<div class=\"d-flex justify-content-between flex-row mb-5\">\n    <button class=\"btn btn-outline-primary\" cdkStepperPrevious>\n        <i class=\"fa fa-angle-left\"></i> Back to address\n    </button>\n    <button  class=\"btn btn-primary\" cdkStepperNext>\n        Go to Review <i class=\"fa fa-angle-right\"></i> \n    </button>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { DeliveryMethod } from 'src/app/shared/models/deliveryMethod';\nimport { CheckoutService } from '../checkout.service';\nimport { BasketService } from 'src/app/basket/basket.service';\n\n@Component({\n  selector: 'app-checkout-delivery',\n  templateUrl: './checkout-delivery.component.html',\n  styleUrls: ['./checkout-delivery.component.scss']\n})\nexport class CheckoutDeliveryComponent implements OnInit {\n  @Input() checkoutForm?: FormGroup;\n  deliveryMethods: DeliveryMethod[] = [];\n\n  constructor(private checkoutService: CheckoutService, private basketService: BasketService) {}\n\n  ngOnInit(): void {\n    this.checkoutService.getDeliveryMethods().subscribe({\n      next: dm => this.deliveryMethods = dm\n    })\n  }\n\n  setShippingPrice(deliveryMethod: DeliveryMethod) {\n    this.basketService.setShippingPrice(deliveryMethod);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}