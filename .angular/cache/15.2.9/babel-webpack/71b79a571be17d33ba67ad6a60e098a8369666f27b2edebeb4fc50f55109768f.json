{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { TestErrorComponent } from './core/test-error/test-error.component';\nimport { NotFoundComponent } from './core/not-found/not-found.component';\nimport { ServerErrorComponent } from './core/server-error/server-error.component';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  component: HomeComponent,\n  data: {\n    breadcrumb: 'Home'\n  }\n}, {\n  path: 'test-error',\n  component: TestErrorComponent\n}, {\n  path: 'not-found',\n  component: NotFoundComponent\n}, {\n  path: 'server-error',\n  component: ServerErrorComponent\n}, {\n  path: 'shop',\n  loadChildren: () => import('./shop/shop.module').then(m => m.ShopModule)\n}, {\n  path: 'basket',\n  loadChildren: () => import('./basket/basket.module').then(m => m.BasketModule)\n}, {\n  path: 'checkout',\n  canActivate: [AuthGuard],\n  loadChildren: () => import('./checkout/checkout.module').then(m => m.CheckoutModule) //this will be lazy loaded for checkout.       \n}, {\n  path: 'orders',\n  canActivate: [AuthGuard],\n  loadChildren: () => import('./orders/orders.module').then(m => m.OrdersModule)\n}, {\n  path: 'account',\n  loadChildren: () => import('./account/account.module').then(m => m.AccountModule)\n}, {\n  path: '**',\n  redirectTo: '',\n  pathMatch: 'full'\n}];\nexport class AppRoutingModule {}\nAppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n  return new (t || AppRoutingModule)();\n};\nAppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppRoutingModule\n});\nAppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [RouterModule.forRoot(routes), RouterModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,kBAAkB,QAAQ,wCAAwC;AAC3E,SAASC,iBAAiB,QAAQ,sCAAsC;AACxE,SAASC,oBAAoB,QAAQ,4CAA4C;AACjF,SAASC,SAAS,QAAQ,0BAA0B;;;AAEpD,MAAMC,MAAM,GAAW,CACrB;EAACC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAEP,aAAa;EAAEQ,IAAI,EAAE;IAACC,UAAU,EAAE;EAAM;AAAC,CAAC,EAChE;EAACH,IAAI,EAAE,YAAY;EAAEC,SAAS,EAAEN;AAAkB,CAAC,EACnD;EAACK,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEL;AAAiB,CAAC,EACjD;EAACI,IAAI,EAAE,cAAc;EAAEC,SAAS,EAAEJ;AAAoB,CAAC,EACvD;EAACG,IAAI,EAAE,MAAM;EAAEI,YAAY,EAAE,MAAK,MAAM,CAAC,oBAAoB,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,UAAU;AAAC,CAAC,EACvF;EAACP,IAAI,EAAE,QAAQ;EAAEI,YAAY,EAAE,MAAK,MAAM,CAAC,wBAAwB,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACE,YAAY;AAAC,CAAC,EAC/F;EACER,IAAI,EAAE,UAAU;EAChBS,WAAW,EAAE,CAACX,SAAS,CAAC;EACvBM,YAAY,EAAE,MAAK,MAAM,CAAC,4BAA4B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACI,cAAc,CAAC,CAAE;CACvF,EACD;EACEV,IAAI,EAAE,QAAQ;EACdS,WAAW,EAAE,CAACX,SAAS,CAAC;EACxBM,YAAY,EAAE,MAAM,MAAM,CAAC,wBAAwB,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACK,YAAY;CAC9E,EACD;EAACX,IAAI,EAAE,SAAS;EAAEI,YAAY,EAAE,MAAK,MAAM,CAAC,0BAA0B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACM,aAAa;AAAC,CAAC,EACnG;EAACZ,IAAI,EAAE,IAAI;EAAEa,UAAU,EAAE,EAAE;EAAEC,SAAS,EAAE;AAAM,CAAC,CAChD;AAMD,OAAM,MAAOC,gBAAgB;AAAhBA,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA;AAAgB;AAAhBA,gBAAgB;YAHjBtB,YAAY,CAACuB,OAAO,CAACjB,MAAM,CAAC,EAC5BN,YAAY;AAAA;;2EAEXsB,gBAAgB;IAAAE;IAAAC,UAFjBzB,YAAY;EAAA;AAAA","names":["RouterModule","HomeComponent","TestErrorComponent","NotFoundComponent","ServerErrorComponent","AuthGuard","routes","path","component","data","breadcrumb","loadChildren","then","m","ShopModule","BasketModule","canActivate","CheckoutModule","OrdersModule","AccountModule","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","exports"],"sourceRoot":"","sources":["C:\\Users\\olumi\\Desktop\\ECommerce\\client\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { TestErrorComponent } from './core/test-error/test-error.component';\r\nimport { NotFoundComponent } from './core/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './core/server-error/server-error.component';\r\nimport { AuthGuard } from './core/guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: HomeComponent, data: {breadcrumb: 'Home'}},\r\n  {path: 'test-error', component: TestErrorComponent},\r\n  {path: 'not-found', component: NotFoundComponent},\r\n  {path: 'server-error', component: ServerErrorComponent},\r\n  {path: 'shop', loadChildren: ()=> import('./shop/shop.module').then(m => m.ShopModule)}, //this will be lazy loaded- for shop\r\n  {path: 'basket', loadChildren: ()=> import('./basket/basket.module').then(m => m.BasketModule)}, //this will be lazy loaded for basket.\r\n  {\r\n    path: 'checkout',\r\n    canActivate: [AuthGuard], //this mean you are only authorised to visit this page only if you are logged in\r\n     loadChildren: ()=> import('./checkout/checkout.module').then(m => m.CheckoutModule)  //this will be lazy loaded for checkout.       \r\n  }, \r\n  {\r\n    path: 'orders', \r\n    canActivate: [AuthGuard],\r\n    loadChildren: () => import('./orders/orders.module').then(m => m.OrdersModule)\r\n  },\r\n  {path: 'account', loadChildren: ()=> import('./account/account.module').then(m => m.AccountModule)}, //this will be lazy loaded for account.\r\n  {path: '**', redirectTo: '', pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}