{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/basket/basket.service\";\nimport * as i2 from \"../checkout.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/cdk/stepper\";\nexport class CheckoutPaymentComponent {\n  constructor(basketService, checkoutService, toastr, router) {\n    this.basketService = basketService;\n    this.checkoutService = checkoutService;\n    this.toastr = toastr;\n    this.router = router;\n  }\n  submitOrder() {\n    const basket = this.basketService.getCurrentBasketValue();\n    if (!basket) return;\n    const orderToCreate = this.getOrderToCreate(basket);\n    if (!orderToCreate) return;\n    this.checkoutService.createOrder(orderToCreate).subscribe({\n      next: order => {\n        this.toastr.success('Order created successfully');\n        this.basketService.deleteLocalBasket();\n        const navigationExtras = {\n          state: order\n        };\n        this.router.navigate(['checkout/success'], navigationExtras);\n      }\n    });\n  }\n  getOrderToCreate(basket) {\n    const deliveryMethodId = this.checkoutForm?.get('deliveryForm')?.get('deliveryMethod')?.value;\n    const shipToAddress = this.checkoutForm?.get('addressForm')?.value;\n    if (!deliveryMethodId || !shipToAddress) return;\n    return {\n      basketId: basket.id,\n      deliveryMethodId: deliveryMethodId,\n      shipToAddress: shipToAddress\n    };\n  }\n}\nCheckoutPaymentComponent.ɵfac = function CheckoutPaymentComponent_Factory(t) {\n  return new (t || CheckoutPaymentComponent)(i0.ɵɵdirectiveInject(i1.BasketService), i0.ɵɵdirectiveInject(i2.CheckoutService), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.Router));\n};\nCheckoutPaymentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CheckoutPaymentComponent,\n  selectors: [[\"app-checkout-payment\"]],\n  inputs: {\n    checkoutForm: \"checkoutForm\"\n  },\n  decls: 7,\n  vars: 0,\n  consts: [[1, \"d-flex\", \"justify-content-between\", \"flex-row\", \"mt-5\"], [\"cdkStepperPrevious\", \"\", 1, \"btn\", \"btn-outline-primary\"], [1, \"fa\", \"fa-angle-left\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"fa\", \"fa-angle-right\"]],\n  template: function CheckoutPaymentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵelement(2, \"i\", 2);\n      i0.ɵɵtext(3, \" Back to review \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function CheckoutPaymentComponent_Template_button_click_4_listener() {\n        return ctx.submitOrder();\n      });\n      i0.ɵɵtext(5, \" Submit order \");\n      i0.ɵɵelement(6, \"i\", 4);\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i5.CdkStepperPrevious],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;AAeA,OAAM,MAAOA,wBAAwB;EAInCC,YAAoBC,aAA4B,EAAUC,eAAgC,EAChFC,MAAqB,EAAUC,MAAc;IADnC,kBAAa,GAAbH,aAAa;IAAyB,oBAAe,GAAfC,eAAe;IAC/D,WAAM,GAANC,MAAM;IAAyB,WAAM,GAANC,MAAM;EAAY;EAE3DC,WAAW;IACT,MAAMC,MAAM,GAAG,IAAI,CAACL,aAAa,CAACM,qBAAqB,EAAE;IACzD,IAAI,CAACD,MAAM,EAAE;IACb,MAAME,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAACH,MAAM,CAAC;IACnD,IAAG,CAACE,aAAa,EAAE;IACnB,IAAI,CAACN,eAAe,CAACQ,WAAW,CAACF,aAAa,CAAC,CAACG,SAAS,CAAC;MACxDC,IAAI,EAAEC,KAAK,IAAG;QACZ,IAAI,CAACV,MAAM,CAACW,OAAO,CAAC,4BAA4B,CAAC;QACjD,IAAI,CAACb,aAAa,CAACc,iBAAiB,EAAE;QACtC,MAAMC,gBAAgB,GAAqB;UAACC,KAAK,EAAEJ;QAAK,CAAC;QACzD,IAAI,CAACT,MAAM,CAACc,QAAQ,CAAC,CAAC,kBAAkB,CAAC,EAAEF,gBAAgB,CAAC;MAC9D;KACD,CAAC;EACJ;EAEQP,gBAAgB,CAACH,MAAc;IACrC,MAAMa,gBAAgB,GAAG,IAAI,CAACC,YAAY,EAAEC,GAAG,CAAC,cAAc,CAAC,EAAEA,GAAG,CAAC,gBAAgB,CAAC,EAAEC,KAAK;IAC7F,MAAMC,aAAa,GAAG,IAAI,CAACH,YAAY,EAAEC,GAAG,CAAC,aAAa,CAAC,EAAEC,KAAgB;IAC7E,IAAI,CAACH,gBAAgB,IAAI,CAACI,aAAa,EAAE;IACzC,OAAO;MACLC,QAAQ,EAAElB,MAAM,CAACmB,EAAE;MACnBN,gBAAgB,EAAEA,gBAAgB;MAClCI,aAAa,EAAEA;KAChB;EACH;;AA/BWxB,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAA2B;EAAAC;IAAAP;EAAA;EAAAQ;EAAAC;EAAAC;EAAAC;IAAA;MCXrCC,8BAA0D;MAElDA,uBAAgC;MAACA,gCACrC;MAAAA,iBAAS;MACTA,iCAAwD;MAAxBA;QAAA,OAASC,iBAAa;MAAA,EAAC;MACnDD,8BAAa;MAAAA,uBAAiC;MAClDA,iBAAS","names":["CheckoutPaymentComponent","constructor","basketService","checkoutService","toastr","router","submitOrder","basket","getCurrentBasketValue","orderToCreate","getOrderToCreate","createOrder","subscribe","next","order","success","deleteLocalBasket","navigationExtras","state","navigate","deliveryMethodId","checkoutForm","get","value","shipToAddress","basketId","id","selectors","inputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\olumi\\Desktop\\ECommerce\\client\\src\\app\\checkout\\checkout-payment\\checkout-payment.component.ts","C:\\Users\\olumi\\Desktop\\ECommerce\\client\\src\\app\\checkout\\checkout-payment\\checkout-payment.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BasketService } from 'src/app/basket/basket.service';\nimport { CheckoutService } from '../checkout.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { Basket } from 'src/app/shared/models/basket';\nimport { OrderToCreate } from 'src/app/shared/models/order';\nimport { Address } from 'src/app/shared/models/user';\n\n@Component({\n  selector: 'app-checkout-payment',\n  templateUrl: './checkout-payment.component.html',\n  styleUrls: ['./checkout-payment.component.scss']\n})\nexport class CheckoutPaymentComponent {\n  @Input() checkoutForm?: FormGroup;\n\n\n  constructor(private basketService: BasketService, private checkoutService: CheckoutService,\n    private toastr: ToastrService, private router: Router) { }\n\n  submitOrder() {\n    const basket = this.basketService.getCurrentBasketValue();\n    if (!basket) return;\n    const orderToCreate = this.getOrderToCreate(basket);\n    if(!orderToCreate) return;\n    this.checkoutService.createOrder(orderToCreate).subscribe({\n      next: order => {\n        this.toastr.success('Order created successfully');\n        this.basketService.deleteLocalBasket();\n        const navigationExtras: NavigationExtras = {state: order};\n        this.router.navigate(['checkout/success'], navigationExtras);\n      }\n    })\n  }\n\n  private getOrderToCreate(basket: Basket) {\n    const deliveryMethodId = this.checkoutForm?.get('deliveryForm')?.get('deliveryMethod')?.value;\n    const shipToAddress = this.checkoutForm?.get('addressForm')?.value as Address;\n    if (!deliveryMethodId || !shipToAddress) return;\n    return {\n      basketId: basket.id,\n      deliveryMethodId: deliveryMethodId,\n      shipToAddress: shipToAddress\n    }\n  }\n}\n","\n\n\n\n<div class=\"d-flex justify-content-between flex-row mt-5\">\n    <button class=\"btn btn-outline-primary\" cdkStepperPrevious>\n        <i class=\"fa fa-angle-left\"></i> Back to review\n    </button>\n    <button class=\"btn btn-primary\" (click)=\"submitOrder()\">\n        Submit order <i class=\"fa fa-angle-right\"></i> \n    </button>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}