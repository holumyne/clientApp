{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/olumi/Desktop/ECommerce/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, Input, ViewChild } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { loadStripe } from '@stripe/stripe-js';\nlet CheckoutPaymentComponent = class CheckoutPaymentComponent {\n  constructor(basketService, checkoutService, toastr, router) {\n    this.basketService = basketService;\n    this.checkoutService = checkoutService;\n    this.toastr = toastr;\n    this.router = router;\n    this.stripe = null;\n    this.cardNumberComplete = false;\n    this.cardExpiryComplete = false;\n    this.cardCvcComplete = false;\n    this.loading = false;\n  }\n  ngOnInit() {\n    loadStripe('pk_test_51Nc0ASDNqK1yTqV4J0A4u2HDd8sYLikpqxlr7CVA7RDM8oatAyj1RQIiwbuccTUcSYyZAitKbEZhy2k9zoXxD76X00IprdA2L6').then(stripe => {\n      this.stripe = stripe;\n      const elements = stripe?.elements();\n      if (elements) {\n        this.cardNumber = elements.create('cardNumber');\n        this.cardNumber.mount(this.cardNumberElement?.nativeElement);\n        this.cardNumber.on('change', event => {\n          this.cardNumberComplete = event.complete;\n          if (event.error) this.cardErrors = event.error.message;else this.cardErrors = null;\n        });\n        this.cardExpiry = elements.create('cardExpiry');\n        this.cardExpiry.mount(this.cardExpiryElement?.nativeElement);\n        this.cardExpiry.on('change', event => {\n          this.cardExpiryComplete = event.complete;\n          if (event.error) this.cardErrors = event.error.message;else this.cardErrors = null;\n        });\n        this.cardCvc = elements.create('cardCvc');\n        this.cardCvc.mount(this.cardCvcElement?.nativeElement);\n        this.cardCvc.on('change', event => {\n          this.cardCvcComplete = event.complete;\n          if (event.error) this.cardErrors = event.error.message;else this.cardErrors = null;\n        });\n      }\n    });\n  }\n  // get paymentFormComplete() {\n  //   return this.checkoutForm?.get('paymentForm')?.valid \n  //     && this.cardNumberComplete \n  //     && this.cardExpiryComplete \n  //     && this.cardCvcComplete\n  // }\n  submitOrder() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.loading = true; //loading indicator turn on\n      const basket = _this.basketService.getCurrentBasketValue();\n      //if (!basket) throw new Error('cannot get basket');\n      try {\n        const createdOrder = yield _this.createOrder(basket);\n        const paymentResult = yield _this.confirmPaymentWithStripe(basket);\n        if (paymentResult.paymentIntent) {\n          _this.basketService.deleteLocalBasket();\n          const navigationExtras = {\n            state: createdOrder\n          };\n          _this.router.navigate(['checkout/success'], navigationExtras);\n        } else {\n          _this.toastr.error(paymentResult.error.message);\n        }\n      } catch (error) {\n        console.log(error);\n        _this.toastr.error(error.message);\n      } finally {\n        _this.loading = false; //loading indicator turn off\n      }\n    })();\n  }\n\n  confirmPaymentWithStripe(basket) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (!basket) throw new Error('Basket is null');\n      const result = _this2.stripe?.confirmCardPayment(basket.clientSecret, {\n        payment_method: {\n          card: _this2.cardNumber,\n          billing_details: {\n            name: _this2.checkoutForm?.get('paymentForm')?.get('nameOnCard')?.value\n          }\n        }\n      });\n      if (!result) throw new Error('Problem attempting payment with stripe');\n      return result;\n    })();\n  }\n  createOrder(basket) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (!basket) throw new Error('Basket is null');\n      const orderToCreate = _this3.getOrderToCreate(basket);\n      return firstValueFrom(_this3.checkoutService.createOrder(orderToCreate));\n    })();\n  }\n  getOrderToCreate(basket) {\n    const deliveryMethodId = this.checkoutForm?.get('deliveryForm')?.get('deliveryMethod')?.value;\n    const shipToAddress = this.checkoutForm?.get('addressForm')?.value;\n    if (!deliveryMethodId || !shipToAddress) throw new Error('Problem with basket');\n    return {\n      basketId: basket.id,\n      deliveryMethodId: deliveryMethodId,\n      shipToAddress: shipToAddress\n    };\n  }\n};\n__decorate([Input()], CheckoutPaymentComponent.prototype, \"checkoutForm\", void 0);\n__decorate([ViewChild('cardNumber')], CheckoutPaymentComponent.prototype, \"cardNumberElement\", void 0);\n__decorate([ViewChild('cardExpiry')], CheckoutPaymentComponent.prototype, \"cardExpiryElement\", void 0);\n__decorate([ViewChild('cardCvc')], CheckoutPaymentComponent.prototype, \"cardCvcElement\", void 0);\nCheckoutPaymentComponent = __decorate([Component({\n  selector: 'app-checkout-payment',\n  templateUrl: './checkout-payment.component.html',\n  styleUrls: ['./checkout-payment.component.scss']\n})], CheckoutPaymentComponent);\nexport { CheckoutPaymentComponent };","map":{"version":3,"mappings":"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","names":["Component","Input","ViewChild","firstValueFrom","loadStripe","CheckoutPaymentComponent","constructor","basketService","checkoutService","toastr","router","ngOnInit","then","stripe","elements","cardNumber","create","mount","cardNumberElement","nativeElement","on","event","cardNumberComplete","complete","error","cardErrors","message","cardExpiry","cardExpiryElement","cardExpiryComplete","cardCvc","cardCvcElement","cardCvcComplete","submitOrder","loading","basket","getCurrentBasketValue","createdOrder","createOrder","paymentResult","confirmPaymentWithStripe","paymentIntent","deleteLocalBasket","navigationExtras","state","navigate","console","log","Error","result","confirmCardPayment","clientSecret","payment_method","card","billing_details","name","checkoutForm","get","value","orderToCreate","getOrderToCreate","deliveryMethodId","shipToAddress","basketId","id","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\olumi\\Desktop\\ECommerce\\client\\src\\app\\checkout\\checkout-payment\\checkout-payment.component.ts"],"sourcesContent":["import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BasketService } from 'src/app/basket/basket.service';\nimport { CheckoutService } from '../checkout.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { firstValueFrom } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { Basket } from 'src/app/shared/models/basket';\nimport { OrderToCreate } from 'src/app/shared/models/order';\nimport { Address } from 'src/app/shared/models/user';\nimport { Stripe, StripeCardCvcElement, StripeCardExpiryElement, StripeCardNumberElement, loadStripe } from '@stripe/stripe-js';\n\n@Component({\n  selector: 'app-checkout-payment',\n  templateUrl: './checkout-payment.component.html',\n  styleUrls: ['./checkout-payment.component.scss']\n})\nexport class CheckoutPaymentComponent implements OnInit {\n  @Input() checkoutForm?: FormGroup;\n  @ViewChild('cardNumber') cardNumberElement?: ElementRef;\n  @ViewChild('cardExpiry') cardExpiryElement?: ElementRef;\n  @ViewChild('cardCvc') cardCvcElement?: ElementRef;\n  stripe: Stripe | null = null;\n  cardNumber?: StripeCardNumberElement;\n  cardExpiry?: StripeCardExpiryElement;\n  cardCvc?: StripeCardCvcElement;\n  cardNumberComplete = false;\n  cardExpiryComplete = false;\n  cardCvcComplete = false;\n  cardErrors: any;\n  loading = false;\n\n  constructor(private basketService: BasketService, private checkoutService: CheckoutService, \n      private toastr: ToastrService, private router: Router) {}\n\n  ngOnInit(): void {\n  loadStripe('pk_test_51Nc0ASDNqK1yTqV4J0A4u2HDd8sYLikpqxlr7CVA7RDM8oatAyj1RQIiwbuccTUcSYyZAitKbEZhy2k9zoXxD76X00IprdA2L6').then(stripe => {  //publishable key from stripe\n\n      this.stripe = stripe;\n      const elements = stripe?.elements();\n      if (elements) {\n        this.cardNumber = elements.create('cardNumber');\n        this.cardNumber.mount(this.cardNumberElement?.nativeElement);\n        this.cardNumber.on('change', event => {\n          this.cardNumberComplete = event.complete;\n          if (event.error) this.cardErrors = event.error.message;\n          else this.cardErrors = null;\n        })\n\n        this.cardExpiry = elements.create('cardExpiry');\n        this.cardExpiry.mount(this.cardExpiryElement?.nativeElement);\n        this.cardExpiry.on('change', event => {\n          this.cardExpiryComplete = event.complete;\n          if (event.error) this.cardErrors = event.error.message;\n          else this.cardErrors = null;\n        })\n\n        this.cardCvc = elements.create('cardCvc');\n        this.cardCvc.mount(this.cardCvcElement?.nativeElement);\n        this.cardCvc.on('change', event => {\n          this.cardCvcComplete = event.complete;\n          if (event.error) this.cardErrors = event.error.message;\n          else this.cardErrors = null;\n        })\n      }\n    })\n  }\n\n  // get paymentFormComplete() {\n  //   return this.checkoutForm?.get('paymentForm')?.valid \n  //     && this.cardNumberComplete \n  //     && this.cardExpiryComplete \n  //     && this.cardCvcComplete\n  // }\n\n  async submitOrder() {\n    this.loading = true;  //loading indicator turn on\n    const basket = this.basketService.getCurrentBasketValue();\n    //if (!basket) throw new Error('cannot get basket');\n    try {\n      const createdOrder = await this.createOrder(basket);\n      const paymentResult = await this.confirmPaymentWithStripe(basket);\n      if (paymentResult.paymentIntent) {\n        this.basketService.deleteLocalBasket();\n        const navigationExtras: NavigationExtras = {state: createdOrder};\n        this.router.navigate(['checkout/success'], navigationExtras);\n      } else {\n        this.toastr.error(paymentResult.error.message);\n      }\n    } catch (error: any) {\n      console.log(error);\n      this.toastr.error(error.message)\n    } finally {\n      this.loading = false; //loading indicator turn off\n    }\n  }\n\n  private async confirmPaymentWithStripe(basket: Basket | null) {  //putting async is to guarantee it return a promise\n    if (!basket) throw new Error('Basket is null');\n    const result = this.stripe?.confirmCardPayment(basket.clientSecret!, {\n      payment_method: {\n        card: this.cardNumber!,\n        billing_details: {\n          name: this.checkoutForm?.get('paymentForm')?.get('nameOnCard')?.value\n        }\n      }\n    });\n    if (!result) throw new Error('Problem attempting payment with stripe');\n    return result;\n  }\n\n  private async createOrder(basket: Basket | null) {\n    if (!basket) throw new Error('Basket is null');\n    const orderToCreate = this.getOrderToCreate(basket);\n    return firstValueFrom(this.checkoutService.createOrder(orderToCreate));\n  }\n\n  private getOrderToCreate(basket: Basket): OrderToCreate {\n    const deliveryMethodId = this.checkoutForm?.get('deliveryForm')?.get('deliveryMethod')?.value;\n    const shipToAddress = this.checkoutForm?.get('addressForm')?.value as Address;\n    if (!deliveryMethodId || !shipToAddress) throw new Error('Problem with basket');\n    return {\n      basketId: basket.id,\n      deliveryMethodId: deliveryMethodId,\n      shipToAddress: shipToAddress\n    }\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}